{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogoConfirmacionComponent } from '../dialogoconfirmacion/dialogoconfirmacion.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"src/app/services/util.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nfunction FindestacionComponent_mat_card_content_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card-content\")(1, \"form\", 13)(2, \"div\", 14)(3, \"div\", 15)(4, \"div\", 16)(5, \"mat-form-field\", 17)(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Maquina\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 16)(10, \"mat-form-field\", 17)(11, \"mat-label\");\n    i0.ɵɵtext(12, \"Descripcion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function FindestacionComponent_mat_card_content_11_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.listarEmpleado(1));\n    });\n    i0.ɵɵelementStart(15, \"mat-icon\");\n    i0.ɵɵtext(16, \"search\");\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementStart(17, \"div\", 21)(18, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function FindestacionComponent_mat_card_content_11_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.nuevo());\n    });\n    i0.ɵɵtext(19, \"Nuevo \");\n    i0.ɵɵelementStart(20, \"mat-icon\");\n    i0.ɵɵtext(21, \"description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function FindestacionComponent_mat_card_content_11_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.listar(1));\n    });\n    i0.ɵɵtext(23, \"Buscar \");\n    i0.ɵɵelementStart(24, \"mat-icon\");\n    i0.ɵɵtext(25, \"search\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function FindestacionComponent_mat_card_content_11_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.Salir(\"\"));\n    });\n    i0.ɵɵtext(27, \"Salir \");\n    i0.ɵɵelementStart(28, \"mat-icon\");\n    i0.ɵɵtext(29, \"launch\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.group);\n  }\n}\nfunction FindestacionComponent_th_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 25);\n  }\n}\nfunction FindestacionComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 26)(1, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function FindestacionComponent_td_17_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const row_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.edit(row_r8));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function FindestacionComponent_td_17_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.delete());\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport let FindestacionComponent = /*#__PURE__*/(() => {\n  class FindestacionComponent {\n    constructor(router, dialogo, util, notifier) {\n      this.router = router;\n      this.dialogo = dialogo;\n      this.util = util;\n      this.notifier = notifier;\n      this.qrData = null;\n      this.scannedCode = null;\n      this.hasCameras = false;\n      this.statusButton = \"false\";\n      this.listaApertura = [];\n      this.listKeyPadButtons = [{\n        icon: 'description',\n        color: 'warn',\n        action: 'nuevo',\n        tooltip: 'Crear Nuevo Registro',\n        texto: \"Nuevo\",\n        estado: \"false\"\n      }, {\n        icon: 'add',\n        color: 'warn',\n        action: 'insert',\n        tooltip: 'Agregar Datos',\n        texto: \"Agregar\",\n        estado: \"group.invalid\"\n      }, {\n        icon: 'sensor_door',\n        color: 'warn',\n        action: 'salir',\n        tooltip: 'Salir De la Pantalla',\n        texto: \"Salir\",\n        estado: \"false\"\n      }];\n      this.metadataTable = [{\n        field: \"codigoEstacion\",\n        title: \"Cod. Estacion\"\n      },\n      //{field:\"codigoCompañia\", title: \"Codigo\"},\n      {\n        field: \"nombreEstacion\",\n        title: \"Estacion\"\n      },\n      // {field:\"codigoEmpleado\", title: \"Codigo\"},\n      {\n        field: \"unidadMedida\",\n        title: \"Unidad Medida\"\n      },\n      //{field:\"codigoEstacion\", title: \"Codigo\"},\n      {\n        field: \"productividad1\",\n        title: \"Productividad 1\"\n      }, {\n        field: \"productividad2\",\n        title: \"Productividad 2\"\n      }, {\n        field: \"productividad3\",\n        title: \"Productividad 3\"\n      }, {\n        field: \"tiempoPreparacion\",\n        title: \"Tiempo Preparacion\"\n      }, {\n        field: \"cantidadPersonas\",\n        title: \"Cantidad Personas\"\n      }];\n      this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n    }\n    ngOnChanges(changes) {\n      // if (changes.firstChange){\n      console.log(changes);\n      //this.dataTable = this.listParte; // comentado para probar el insert\n      //this.dataTable  = changes[\"listParte\"].currentValue;\n      // this.dataTable = changes.listParte.currentValue;\n      //this.dataTable =  changes.listParterespuesta.currentValue;\n      //this.dataTable = this.listParterespuesta.datos.result;\n      // }\n    }\n\n    ngOnInit() {\n      this.initializeForm();\n      this.path = \"/gestionpartes\";\n      //this.dataTable = this.listParterespuesta;\n      this.cantidadApoyo = 0;\n      this.codigoEmpleado = 0;\n      //this.dataTable =  this.listParterespuesta.datos.result;\n    }\n\n    execute(action) {}\n    Salir(path) {\n      this.router.navigate([this.path]);\n    }\n    //RequestEmpleado : AperturaParteEmpleado;\n    listarEmpleado(codigoEmpleado) {}\n    listarEstacion(codigoEstacion) {}\n    listar(codigoparte) {\n      /*\r\n         \r\n          this.dataTable = [];\r\n           \r\n            const fd= new FormData();\r\n            const values = this.group.value\r\n            const parte: RequestCapacidadMaquina =  this.group.value;\r\n            this.codigoEstacion= values['CodigoEstacion']\r\n            parte.CodigoEstacion = this.codigoEstacion;\r\n            parte.CodigoCompañia=\"02100000\"\r\n           this.CapacidadMaquinaService.listar(parte).subscribe(response =>\r\n            {\r\n              this.listCMrespuesta = response\r\n              this.dataTable = this.listCMrespuesta.datos.result;\r\n            }, (errorServicio)=>{\r\n                this.util.showMessage( errorServicio.error.meta.mensaje);\r\n                this.dataTable = [];\r\n             });\r\n      \r\n      \r\n             */\n    }\n    delete() {\n      const response = this.util.confirm(\"Estas seguro de Eliminar\");\n      response.subscribe(response => console.log(\"response\", response));\n    }\n    /*edit (row : CapacidadMaquinaEntity){\r\n    \n        this.onEdit.emit(row)\r\n        this.openModal(row)\r\n    \n    }*/\n    nuevo() {\n      // this.initializeForm();\n      //this.listaApertura=[]\n      // this.dataTable = this.listaApertura;\n      this.openModal({\n        name: 'Marcela'\n      });\n    }\n    cargarDatos() {\n      this.group = new FormGroup({\n        codigoEmpleado: new FormControl(this.listaApertura[0].codigoEmpleado, Validators.required),\n        codigoEstacion: new FormControl(this.listaApertura[0].codigoEstacion, Validators.required),\n        codigoOrdenTrabajo: new FormControl(this.listaApertura[0].codigoOrdenTrabajo, Validators.required)\n      });\n    }\n    exportar() {\n      this.OpenSheet();\n    }\n    OpenSheet() {\n      this.util.openSheet();\n    }\n    initializeForm() {\n      this.group = new FormGroup({\n        codigoEstacion: new FormControl(null),\n        descripcion: new FormControl(null)\n      });\n    }\n    openModal(record = null) {\n      /*const options = {\r\n           \r\n        disableClose: true,\r\n        panelClass:'container-form',\r\n        data: record,\r\n      };\r\n              const reference =  this.util.openModal(\r\n        FormcapacidadmaquinaComponent,\r\n        options\r\n         \r\n        );\r\n        reference.subscribe((respuesta) => {\r\n          if (respuesta){\r\n           \r\n           if (!respuesta.codigoCapacidadMaquina){\r\n                this.CapacidadMaquinaService.insert(respuesta).subscribe(response =>\r\n                  {\r\n                    //this.listCMInsertrespuesta = response\r\n                    //this.dataTable = this.listCMrespuesta.datos.result;\r\n                  }, (errorServicio)=>{\r\n                      this.util.showMessage( errorServicio.error.meta.mensaje);\r\n                      this.dataTable = [];\r\n                  });\r\n             }else {\r\n              \r\n              this.CapacidadMaquinaService.update(respuesta,respuesta.codigoCapacidadMaquina).subscribe(response =>\r\n                {\r\n                  //this.listCMInsertrespuesta = response\r\n                  //this.dataTable = this.listCMrespuesta.datos.result;\r\n                }, (errorServicio)=>{\r\n                    this.util.showMessage( errorServicio.error.meta.mensaje);\r\n                    this.dataTable = [];\r\n                });\r\n                     }\r\n                  }\r\n                });\r\n                */\n    }\n    scanCode() {\n      // this.barcodeScanner.scan().then(barcodeData => {\n      //  this.scannedCode = barcodeData.text;\n      //})\n      this.dialogo.open(DialogoConfirmacionComponent, {\n        data: `¿Desea Agregar personal de Apoyo?`\n      }).afterClosed().subscribe(confirmado => {\n        if (confirmado) {\n          alert(\"¡A mí también!\");\n          //this.edit();\n        } else {\n          alert(\"Deberías probarlo, a mí me gusta :)\");\n        }\n      });\n      //alert(\"camara\");\n    }\n  }\n\n  FindestacionComponent.ɵfac = function FindestacionComponent_Factory(t) {\n    return new (t || FindestacionComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.UtilService), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  FindestacionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FindestacionComponent,\n    selectors: [[\"app-findestacion\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 18,\n    vars: 3,\n    consts: [[\"color\", \"primary\", \"fxLayout\", \"\", \"fxLayoutAlign\", \"space-between left\", 2, \"height\", \"33px\"], [1, \"title\"], [\"fxLayout\", \"\", \"fxLayoutAlign\", \"end center\"], [\"mat-button\", \"\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayout.xs\", \"column\", \"fxLayoutGap\", \"0px\", \"fxLayoutAlign\", \"center stretch\", 2, \"margin-top\", \"1px\"], [\"fxFlex\", \"100\", 2, \"padding\", \"0px\"], [4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxLayout.xs\", \"column\", \"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"50\", 2, \"background-color\", \"rgb(219, 217, 217)\", \"padding\", \"24px\"], [3, \"dataTable\", \"metadataTable\"], [\"matColumnDef\", \"actions\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [3, \"formGroup\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"2px\", \"fxLayoutAlign\", \"center center\"], [\"fxFlex\", \"100\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", 2, \"padding\", \"24px\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\", 1, \"example-full-div-width\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"required\", \"\", \"formControlName\", \"codigoEstacion\"], [\"type\", \"text\", \"matInput\", \"\", \"required\", \"\", \"formControlName\", \"descripcion\"], [\"mat-fab\", \"\", \"color\", \"warn\", \"type\", \"button\", 2, \"height\", \"55px\", 3, \"click\"], [\"fxLayoutAlign\", \"center center\", \"fxLayoutGap\", \"20px\", 2, \"background-color\", \"rgb(219, 217, 217)\", \"padding\", \"10px\", \"margin\", \"0\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"matTooltip\", \"Crear un nuevo registro\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"matTooltip\", \"Buscar registro\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"matTooltip\", \"Cerrar de la pantalla actual\", \"type\", \"button\", 3, \"click\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"]],\n    template: function FindestacionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Buscar Maquina\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function FindestacionComponent_Template_button_click_4_listener() {\n          return ctx.collapsed = true;\n        });\n        i0.ɵɵtext(5, \"Collapsar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function FindestacionComponent_Template_button_click_6_listener() {\n          return ctx.collapsed = false;\n        });\n        i0.ɵɵtext(7, \"Expandir\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"mat-card\");\n        i0.ɵɵtemplate(11, FindestacionComponent_mat_card_content_11_Template, 30, 1, \"mat-card-content\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 8)(14, \"app-table\", 9);\n        i0.ɵɵelementContainerStart(15, 10);\n        i0.ɵɵtemplate(16, FindestacionComponent_th_16_Template, 1, 0, \"th\", 11);\n        i0.ɵɵtemplate(17, FindestacionComponent_td_17_Template, 7, 0, \"td\", 12);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", !ctx.collapsed);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataTable\", ctx.dataTable)(\"metadataTable\", ctx.metadataTable);\n      }\n    },\n    styles: [\".align-right[_ngcontent-%COMP%]{text-align:right!important}.example-form[_ngcontent-%COMP%]{min-width:150px;max-width:500px;width:100%}.example-full-width[_ngcontent-%COMP%]{width:100%}.example-full-div-width[_ngcontent-%COMP%]{width:50%}td[_ngcontent-%COMP%]{padding-right:8px}.small-video[_ngcontent-%COMP%]{max-height:70vh;width:100vw;object-fit:contain}.example-table[_ngcontent-%COMP%]{width:100%}.mat-card[_ngcontent-%COMP%]{padding:0 0 10px}.container-form[_ngcontent-%COMP%]   mat-dialog-container[_ngcontent-%COMP%]{padding:0}.mat-toolbar[_ngcontent-%COMP%]   mat-dialog-content[_ngcontent-%COMP%]{margin:0;padding:24px}@media (max-width: 500px){.container-form[_ngcontent-%COMP%]{width:320px}}@media all and (max-width: 600px){div[_ngcontent-%COMP%]{width:100%;height:auto;margin-left:10px}}\"]\n  });\n  return FindestacionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}