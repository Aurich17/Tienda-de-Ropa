{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { PromocionService } from './services/promocion.service';\nimport { PromocionRepository } from 'src/app/Promociones/domain/promociones.repository';\nimport { TiendaService } from './services/tienda.service';\nimport { MenuRepository } from 'src/app/menus/domain/menu.repository';\nimport { RolRepository } from 'src/app/roles/domain/rol.repository';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\nimport { CoreModule } from './core/core.module';\nimport { UserRepository } from './usuario/domain/user-repository';\nimport { UserOperations } from './usuario/infraestructura/user-operation';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { APP_BASE_HREF, DatePipe } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AperturaparteRepository } from './aperturaparte/domain/parte.repository';\nimport { AperturaparteService } from './services/aperturaparte.service';\nimport { TokenInterceptor } from './interceptors/token.interceptor';\nimport { MatInputModule } from '@angular/material/input';\nimport { RolService } from './services/rol.service';\nimport { ManMenuService } from './services/manMenu.service';\nimport { AlmacenService } from './services/almacen.service';\nimport { AlmacenRepository } from './almacen/domain/almacen.repository';\nimport { PersonalRepository } from './Personal/domain/personal.repository';\nimport { PersonalService } from './services/personal.service';\nimport { LoteRepository } from './Lotes/domain/lote.repository';\nimport { LoteService } from './services/lote.service';\nimport { TiendaRepository } from './Tienda/domain/tienda.repository';\nimport { MedidaRepository } from './Medida/domain/medida.repository';\nimport { MedidaService } from './services/medida.service';\nimport { ProductoRepository } from './producto/domain/producto.repository';\nimport { ProductoService } from './services/producto.service';\nimport { IngresoProductoRepository } from './IngresoProducto/domain/ingresorproducto.repository';\nimport { IngresoProductoService } from './services/ingresoproducto';\nimport { TransferenciaEntreAlmacenesRepository } from './transferenciaentrealmacenes/domain/transferenciaentrealmacenes.repository';\nimport { TransferenciaEntreAlmacenesService } from './services/transferenciaentrealmacenes.service';\nimport { DashboardventaComponent } from './dashboardventa/presentacion/components/dashboardventa/dashboardventa.component';\nimport { PageDashboardventaComponent } from './dashboardventa/presentacion/components/page-dashboardventa/page-dashboardventa.component';\n//import { AccordionComponent } from './core/presentacion/component/accordion/accordion/accordion.component';\n//import { AccordionComponent } from './core/presentacion/component/accordion/accordion/accordion.component';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, DashboardventaComponent, PageDashboardventaComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, SharedModule, CoreModule, HttpClientModule, AppRoutingModule, MatInputModule, RouterModule, FormsModule, ReactiveFormsModule],\n  providers: [DatePipe, {\n    provide: UserRepository,\n    useClass: UserOperations\n  }, {\n    provide: APP_BASE_HREF,\n    useValue: '/'\n  }, {\n    provide: AperturaparteRepository,\n    useClass: AperturaparteService\n  }, {\n    provide: RolRepository,\n    useClass: RolService\n  }, {\n    provide: MenuRepository,\n    useClass: ManMenuService\n  }, {\n    provide: AlmacenRepository,\n    useClass: AlmacenService\n  }, {\n    provide: PersonalRepository,\n    useClass: PersonalService\n  }, {\n    provide: LoteRepository,\n    useClass: LoteService\n  }, {\n    provide: TiendaRepository,\n    useClass: TiendaService\n  }, {\n    provide: PromocionRepository,\n    useClass: PromocionService\n  }, {\n    provide: MedidaRepository,\n    useClass: MedidaService\n  }, {\n    provide: ProductoRepository,\n    useClass: ProductoService\n  }, {\n    provide: IngresoProductoRepository,\n    useClass: IngresoProductoService\n  }, {\n    provide: TransferenciaEntreAlmacenesRepository,\n    useClass: TransferenciaEntreAlmacenesService\n  },\n  // todo lo que se necesita que se instacie una vez se tieen que poner aca en el provider\n  // todo lo que se necesita que se instacie una vez se tieen que poner aca en el provider\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  } //BarcodeScanner\n  ],\n\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}