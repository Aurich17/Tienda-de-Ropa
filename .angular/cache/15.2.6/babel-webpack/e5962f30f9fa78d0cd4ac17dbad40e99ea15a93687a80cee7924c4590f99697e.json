{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/error.service\";\nexport let ErrorControlDirective = /*#__PURE__*/(() => {\n  class ErrorControlDirective {\n    constructor(el, control, errors) {\n      this.el = el;\n      this.control = control;\n      this.errors = errors;\n      this.errorSpanId = \"\";\n    }\n    NgOnInit() {\n      this.errorSpanId = Date.now().toString();\n      this.control.statusChanges.subscribe(status => {\n        if (status === \"INVALID\") {\n          this.insertMessageError();\n        } else {\n          this.removeMessageError();\n        }\n      });\n    }\n    insertMessageError() {\n      this.removeMessageError();\n      const valueErrors = this.control.errors;\n      const firtsError = Object.keys(valueErrors)[0];\n      const errorMessage = this.errors.getMessage(firtsError);\n      const errSpan = `<span style= \"color:red;font-style:italic;font-size:11px;\" id =\"${this.errorSpanId}\">\n        ${errorMessage}</span>`;\n      this.el.nativeElement.parentElement.insertAdjancetHTML(\"beforeend\", errSpan);\n    }\n    removeMessageError() {\n      const errorElement = document.getElementById(this.errorSpanId);\n      if (errorElement) {\n        errorElement.remove();\n      }\n    }\n  }\n  ErrorControlDirective.ɵfac = function ErrorControlDirective_Factory(t) {\n    return new (t || ErrorControlDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.NgControl), i0.ɵɵdirectiveInject(i2.ErrorService));\n  };\n  ErrorControlDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ErrorControlDirective,\n    selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"FormControl\", \"\"]]\n  });\n  return ErrorControlDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}