{"ast":null,"code":"import { timeout } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { AperturaparteRepository } from '../aperturaparte/domain/parte.repository';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./storage.service\";\nexport let AperturaparteService = /*#__PURE__*/(() => {\n  class AperturaparteService extends AperturaparteRepository {\n    constructor(http, storage) {\n      super();\n      this.http = http;\n      this.storage = storage;\n    }\n    //insert(fd : ParteEntity): Observable<ParteInsertResponse> {\n    insert(fd) {\n      //return  this.http.post<ParteInsertResponse>(`${environment.PATH_API}/partes/agregar/`,fd);\n      return this.http.post(`${environment.PATH_API}/partes/registrar`, fd).pipe(timeout(300000));\n    }\n    update(aperturaparte) {\n      return this.http.post(`${environment.PATH_API}/partes/actualizar/`, aperturaparte).pipe(timeout(300000));\n    }\n    listar(requestparte) {\n      return this.http.post(`${environment.PATH_API}/partes/listaxfiltros/`, requestparte);\n      //return this.http.get<ParteResponse>(`${environment.PATH_API}/partes/parte/${id}`).pipe(\n      // pluck(\"datos\")\n      ////  pluck('codigoParte')\n      //);\n      //return this.http.get<ParteEntity[]>(`${environment.PATH_API}/partes/lista/`)\n      //return this.http.get<ParteResponse>(`${environment.PATH_API}/partes/parte`);\n      //return this.http.get<ParteEntity[]>(`${environment.PATH_API}/partes/lista`).pipe(\n      // pluck('codigoEmpleado')\n      //pluck('[]')\n      //);\n    }\n\n    listarempleado(empleado) {\n      // const headers = new HttpHeaders().set( 'Content-Type', 'application/json' );\n      //let parametros = new HttpParams()\n      // .set('CodigoCompañia', empleado.codigoCompañia)\n      //.set('CodigoEmpleado', empleado.codigoEmpleado.toString())\n      // .set('CodigoEstacion',\"CER-03\")\n      // return this.http.get(this.APIUrl + '/Pais', { params: parametros });\n      return this.http.post(`${environment.PATH_API}/empleado/listaxfiltros/`, empleado);\n      // return this.http.get<EmpleadoResponse>(`${environment.PATH_API}/estacion/listaxfiltros/`, {headers, params: parametros })\n    }\n\n    listarestacion(estacion) {\n      // const headers = new HttpHeaders().set( 'Content-Type', 'application/json' );\n      //let parametros = new HttpParams()\n      // .set('CodigoCompañia', empleado.codigoCompañia)\n      //.set('CodigoEmpleado', empleado.codigoEmpleado.toString())\n      // .set('CodigoEstacion',\"CER-03\")\n      // return this.http.get(this.APIUrl + '/Pais', { params: parametros });\n      return this.http.post(`${environment.PATH_API}/estacion/listaxfiltros/`, estacion);\n      // return this.http.get<EmpleadoResponse>(`${environment.PATH_API}/estacion/listaxfiltros/`, {headers, params: parametros })\n    }\n\n    listarot(requestOT) {\n      return this.http.post(`${environment.PATH_API}/ot/listaxfiltros/`, requestOT);\n    }\n    listarParteActividad(requestlistar) {\n      return this.http.post(`${environment.PATH_API}/parteactividad/listaxfiltros`, requestlistar);\n    }\n    ListarMotivoParte(request) {\n      return this.http.post(`${environment.PATH_API}/partes/ListarMotivoParte`, request);\n    }\n    ListarMotivoRechazado(request) {\n      return this.http.post(`${environment.PATH_API}/motivorechazo/listaxfiltros`, request);\n    }\n    ValidarParte(request) {\n      return this.http.post(`${environment.PATH_API}/partes/validarparte`, request);\n    }\n  }\n  AperturaparteService.ɵfac = function AperturaparteService_Factory(t) {\n    return new (t || AperturaparteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StorageService));\n  };\n  AperturaparteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AperturaparteService,\n    factory: AperturaparteService.ɵfac\n  });\n  return AperturaparteService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}