{"ast":null,"code":"import { BaseChartDirective } from 'ng2-charts';\nimport DataLabelsPlugin from 'chartjs-plugin-datalabels';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Graficos/domain/graficos.repository\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/button\";\nexport let DashboardProductoComponent = /*#__PURE__*/(() => {\n  class DashboardProductoComponent {\n    constructor(graficoService) {\n      this.graficoService = graficoService;\n      this.listaAlmacen = {};\n      this.almacenResponse = {};\n      this.productosEntrada = 0;\n      this.productosSalida = 0;\n      this.productoNombre = '';\n      this.barChartOptions = {\n        responsive: true,\n        // We use these empty structures as placeholders for dynamic theming.\n        scales: {\n          x: {},\n          y: {\n            min: 5\n          }\n        },\n        plugins: {\n          legend: {\n            display: true //Esto muestra las leyendas\n          },\n\n          datalabels: {\n            anchor: 'end',\n            align: 'end'\n          }\n        }\n      };\n      this.barChartType = 'bar';\n      this.barChartPlugins = [DataLabelsPlugin];\n      this.barChartData = {\n        labels: ['Entrada', 'Salida'],\n        datasets: [{\n          data: [this.productosEntrada, this.productosSalida],\n          label: this.productoNombre,\n          backgroundColor: ['rgba(255, 0, 0, 0.5)', 'rgba(0, 0, 255, 0.5)']\n        }]\n      };\n    }\n    listar() {\n      const fd = new FormData();\n      const requestGrafico = {};\n      requestGrafico.CodigoProducto = '2';\n      requestGrafico.CodigoAlmacen = '1';\n      requestGrafico.CodigoProductoLote = '';\n      requestGrafico.CodigoLote = '0';\n      requestGrafico.Descripcion = '';\n      requestGrafico.Estado = '';\n      requestGrafico.CodigoEmpresa = '00000001';\n      this.graficoService.listar(requestGrafico).subscribe(response => {\n        this.almacenResponse = response;\n        this.productosEntrada = this.almacenResponse.datos.result[0].stock;\n        this.productoNombre = this.almacenResponse.datos.result[0].descripcion;\n        let tamano = this.almacenResponse.datos.result.length;\n        console.log(tamano);\n        if (tamano < 2) {\n          this.productosSalida = 0;\n        } else {\n          this.productosSalida = this.almacenResponse.datos.result[1].stock * -1;\n        }\n        // Actualiza los datos del grafico\n        this.barChartData.datasets[0].data = [this.productosEntrada, this.productosSalida];\n        if (this.chart !== undefined) {\n          this.chart.chart.update();\n        }\n      });\n    }\n    // events\n    chartClicked({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n    chartHovered({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n  }\n  DashboardProductoComponent.ɵfac = function DashboardProductoComponent_Factory(t) {\n    return new (t || DashboardProductoComponent)(i0.ɵɵdirectiveInject(i1.GraficoRepository));\n  };\n  DashboardProductoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardProductoComponent,\n    selectors: [[\"app-dashboard-producto\"]],\n    viewQuery: function DashboardProductoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseChartDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 18,\n    vars: 0,\n    consts: [[1, \"filtros\"], [1, \"filtro\"], [\"type\", \"text\"], [\"mat-raised-button\", \"\"]],\n    template: function DashboardProductoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"DASHBOARD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"mat-card\", 1)(4, \"div\");\n        i0.ɵɵelement(5, \"input\", 2)(6, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\")(8, \"button\", 3);\n        i0.ɵɵtext(9, \"BUSCAR\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"mat-card\", 1)(11, \"div\");\n        i0.ɵɵelement(12, \"input\", 2)(13, \"input\", 2)(14, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\")(16, \"button\", 3);\n        i0.ɵɵtext(17, \"BUSCAR\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    dependencies: [i2.MatCard, i3.MatButton],\n    styles: [\"h1[_ngcontent-%COMP%]{margin-top:70px;text-align:center}button[_ngcontent-%COMP%]{display:block;margin:0 auto;width:45%;background-color:var(--color-boton)}.grafico1[_ngcontent-%COMP%]{margin-top:70px;width:550px;height:650px}.filtros[_ngcontent-%COMP%]{width:100%;height:120px;background-color:red;display:flex;flex-direction:row;justify-content:space-around}.filtro[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-around;width:45%;background-color:var(--color-tarjeta)}\"]\n  });\n  return DashboardProductoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}