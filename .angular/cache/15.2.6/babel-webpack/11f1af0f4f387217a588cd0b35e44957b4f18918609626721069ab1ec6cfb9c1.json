{"ast":null,"code":"import { BaseChartDirective } from 'ng2-charts';\nimport DataLabelsPlugin from 'chartjs-plugin-datalabels';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Graficos/domain/graficos.repository\";\nimport * as i2 from \"src/app/services/storage.service\";\nimport * as i3 from \"src/app/producto/domain/producto.repository\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/datepicker\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"ng2-charts\";\nexport let DashboardProductoComponent = /*#__PURE__*/(() => {\n  class DashboardProductoComponent {\n    ngOnInit() {\n      this.listarDashboardVentas();\n      this.listar();\n    }\n    constructor(graficoService, storage, productoService) {\n      this.graficoService = graficoService;\n      this.storage = storage;\n      this.productoService = productoService;\n      this.arrayFechaInicio = [];\n      this.arrayMontoTotal = [];\n      this.listaAlmacen = {};\n      this.almacenResponse = {};\n      this.ventasResponse = {};\n      this.productosEntrada = 0;\n      this.productosSalida = 0;\n      this.productoNombre = '';\n      this.barChartOptions = {\n        responsive: true,\n        // We use these empty structures as placeholders for dynamic theming.\n        scales: {\n          x: {},\n          y: {\n            min: 5\n          }\n        },\n        plugins: {\n          legend: {\n            display: true //Esto muestra las leyendas\n          },\n\n          datalabels: {\n            anchor: 'end',\n            align: 'end'\n          }\n        }\n      };\n      this.barChartType = 'bar';\n      this.barChartPlugins = [DataLabelsPlugin];\n      this.barChartData = {\n        labels: ['Entrada', 'Salida'],\n        datasets: [{\n          data: [this.productosEntrada, this.productosSalida],\n          label: this.productoNombre,\n          backgroundColor: ['rgba(255, 0, 0, 0.5)', 'rgba(0, 0, 255, 0.5)']\n        }]\n      };\n    }\n    listar() {\n      const fd = new FormData();\n      const requestGrafico = {};\n      requestGrafico.CodigoProducto = '2';\n      requestGrafico.CodigoAlmacen = '1';\n      requestGrafico.CodigoProductoLote = '';\n      requestGrafico.CodigoLote = '0';\n      requestGrafico.Descripcion = '';\n      requestGrafico.Estado = '';\n      requestGrafico.CodigoEmpresa = '00000001';\n      this.graficoService.listar(requestGrafico).subscribe(response => {\n        this.almacenResponse = response;\n        this.productosEntrada = this.almacenResponse.datos.result[0].stock;\n        this.productoNombre = this.almacenResponse.datos.result[0].descripcion;\n        let tamano = this.almacenResponse.datos.result.length;\n        console.log(tamano);\n        if (tamano < 2) {\n          this.productosSalida = 0;\n        } else {\n          this.productosSalida = this.almacenResponse.datos.result[1].stock * -1;\n        }\n        // Actualiza los datos del grafico\n        this.barChartData.datasets[0].data = [this.productosEntrada, this.productosSalida];\n        if (this.chart !== undefined) {\n          this.chart.chart.update();\n        }\n      });\n    }\n    listarDashboardVentas() {\n      const requestDashboardVentas = {};\n      requestDashboardVentas.CodigoProducto = 3;\n      requestDashboardVentas.FechaInicio = \"2021-01-01T00:00:00\";\n      requestDashboardVentas.FechaFin = \"2024-09-01T00:00:00\";\n      requestDashboardVentas.Semana = 0;\n      requestDashboardVentas.Descripcion = '';\n      requestDashboardVentas.Estado = 'PR';\n      requestDashboardVentas.CodigoEmpresa = \"00000001\";\n      this.graficoService.dashboardventas(requestDashboardVentas).subscribe(response => {\n        this.ventasResponse = response;\n        this.arrayFechaInicio.push();\n        console.log(this.ventasResponse.datos.result);\n      });\n    }\n    // events,\n    chartClicked({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n    chartHovered({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n  }\n  DashboardProductoComponent.ɵfac = function DashboardProductoComponent_Factory(t) {\n    return new (t || DashboardProductoComponent)(i0.ɵɵdirectiveInject(i1.GraficoRepository), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.ProductoRepository));\n  };\n  DashboardProductoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardProductoComponent,\n    selectors: [[\"app-dashboard-producto\"]],\n    viewQuery: function DashboardProductoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseChartDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 42,\n    vars: 6,\n    consts: [[1, \"filtro\"], [1, \"filtro_input\"], [\"appearance\", \"outline\", \"color\", \"primary\", 2, \"width\", \"30%\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"0\", 1, \"iput\", 2, \"text-align\", \"center\", \"font-size\", \"16px\"], [\"matInput\", \"\", \"type\", \"text\", 1, \"iput\", 2, \"text-align\", \"center\", \"font-size\", \"16px\"], [1, \"icono\"], [\"appearance\", \"outline\"], [3, \"rangePicker\"], [\"matStartDate\", \"\", \"placeholder\", \"Start date\", \"readonly\", \"\"], [\"matEndDate\", \"\", \"placeholder\", \"End date\", \"readonly\", \"\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"value\", \"option1\"], [\"value\", \"option2\"], [\"value\", \"option3\"], [1, \"grafico1\"], [\"baseChart\", \"\", 1, \"chart\", 3, \"data\", \"options\", \"plugins\", \"type\", \"chartHover\", \"chartClick\"]],\n    template: function DashboardProductoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"DASHBOARD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-card\", 0)(3, \"div\", 1)(4, \"mat-form-field\", 2)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Cod.Producto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Desc.Producto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\")(13, \"mat-icon\", 5);\n        i0.ɵɵtext(14, \"search\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"mat-form-field\", 6)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Enter a date range\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-date-range-input\", 7);\n        i0.ɵɵelement(20, \"input\", 8)(21, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"mat-datepicker-toggle\", 10)(23, \"mat-date-range-picker\", null, 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 6)(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Semana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-select\")(29, \"mat-option\", 12);\n        i0.ɵɵtext(30, \"Semana 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-option\", 13);\n        i0.ɵɵtext(32, \"Semana 2 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-option\", 14);\n        i0.ɵɵtext(34, \"Semana 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"mat-option\", 14);\n        i0.ɵɵtext(36, \"Semana 4\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"button\")(38, \"mat-icon\", 5);\n        i0.ɵɵtext(39, \"search\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(40, \"mat-card\", 15)(41, \"canvas\", 16);\n        i0.ɵɵlistener(\"chartHover\", function DashboardProductoComponent_Template_canvas_chartHover_41_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function DashboardProductoComponent_Template_canvas_chartClick_41_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(24);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"rangePicker\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.barChartOptions)(\"plugins\", ctx.barChartPlugins)(\"type\", ctx.barChartType);\n      }\n    },\n    dependencies: [i4.MatCard, i5.MatFormField, i5.MatLabel, i5.MatSuffix, i6.MatInput, i7.MatIcon, i8.MatDatepickerToggle, i8.MatDateRangeInput, i8.MatStartDate, i8.MatEndDate, i8.MatDateRangePicker, i9.MatSelect, i10.MatOption, i11.BaseChartDirective],\n    styles: [\"h1[_ngcontent-%COMP%]{margin-top:70px;text-align:center}button[_ngcontent-%COMP%]{width:15%;border:none}.icono[_ngcontent-%COMP%]{font-size:34px}.grafico1[_ngcontent-%COMP%]{margin:20px auto 0;width:95%;height:250px;background-color:var(--color-tarjeta)}.filtro[_ngcontent-%COMP%]{margin:0 auto;display:flex;flex-direction:row;justify-content:space-between;width:95%;height:8%;background-color:var(--color-tarjeta)}.filtro_input[_ngcontent-%COMP%]{width:45%;display:flex;justify-content:space-around}\"]\n  });\n  return DashboardProductoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}