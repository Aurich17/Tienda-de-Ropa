{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Host, Self, Optional, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/table';\nimport { MatTableModule } from '@angular/material/table';\nimport * as i1 from 'cdk-table-exporter';\nimport { CdkTableExporter, XLSX_LIGHTWEIGHT, CdkTableExporterModule } from 'cdk-table-exporter';\nexport * from 'cdk-table-exporter';\nlet MatTableExporterDirective = /*#__PURE__*/(() => {\n  class MatTableExporterDirective extends CdkTableExporter {\n    /**\n     * Overriding ngAfterViewInit of TableExporter\n     */\n    ngAfterViewInit() {\n      this.exportStarted.subscribe(_ => {\n        this.enablePaginator(false);\n      });\n      this.exportCompleted.subscribe(_ => {\n        this.enablePaginator(true);\n      });\n    }\n    constructor(serviceLocator, dataExtractor, table) {\n      super(serviceLocator, dataExtractor, table);\n    }\n    /**\n     * MatTable implementation of getPageCount\n     */\n    getPageCount() {\n      const pageSize = this.getPageSize();\n      if (pageSize == 0) {\n        return 0;\n      }\n      const pageCount = this.getTotalItemsCount() / this.getPageSize();\n      return Math.ceil(pageCount) ?? 1;\n    }\n    /**\n     * MatTable implementation of getPageSize\n     */\n    getPageSize() {\n      return this.getPaginator()?.pageSize ?? 0;\n    }\n    /**\n     * MatTable implementation of getCurrentPageIndex\n     */\n    getCurrentPageIndex() {\n      return this.getPaginator()?.pageIndex ?? 0;\n    }\n    /**\n     * MatTable implementation of getTotalItemsCount\n     */\n    getTotalItemsCount() {\n      return this.getPaginator()?.length ?? this.getDataSource()?.data?.length ?? 0;\n    }\n    /**\n     * MatTable implementation of goToPage\n     */\n    goToPage(index) {\n      const paginator = this.getPaginator();\n      paginator.pageIndex = index;\n      paginator._changePageSize(paginator.pageSize);\n    }\n    /**\n     * MatTable implementation of getPageChangeObservable\n     */\n    getPageChangeObservable() {\n      return this.getPaginator()?.page;\n    }\n    getDataSource() {\n      return this._cdkTable.dataSource;\n    }\n    getPaginator() {\n      return this.getDataSource()?.paginator;\n    }\n    enablePaginator(value) {\n      const paginator = this.getPaginator();\n      paginator.disabled = !value;\n      paginator._changePageSize(paginator.pageSize);\n    }\n  }\n  MatTableExporterDirective.ɵfac = function MatTableExporterDirective_Factory(t) {\n    return new (t || MatTableExporterDirective)(i0.ɵɵdirectiveInject(i1.ServiceLocatorService), i0.ɵɵdirectiveInject(i1.DataExtractorService), i0.ɵɵdirectiveInject(i2.MatTable, 11));\n  };\n  MatTableExporterDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTableExporterDirective,\n    selectors: [[\"\", \"matTableExporter\", \"\"]],\n    exportAs: [\"matTableExporter\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTableExporterDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatTableExporterModule = /*#__PURE__*/(() => {\n  class MatTableExporterModule {\n    static forRoot(configuration) {\n      return {\n        ngModule: MatTableExporterModule,\n        providers: [{\n          provide: XLSX_LIGHTWEIGHT,\n          useValue: configuration.xlsxLightWeight\n        }]\n      };\n    }\n  }\n  MatTableExporterModule.ɵfac = function MatTableExporterModule_Factory(t) {\n    return new (t || MatTableExporterModule)();\n  };\n  MatTableExporterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatTableExporterModule\n  });\n  MatTableExporterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatTableModule, CdkTableExporterModule]\n  });\n  return MatTableExporterModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of mat-table-exporter\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatTableExporterDirective, MatTableExporterModule };\n//# sourceMappingURL=mat-table-exporter.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}