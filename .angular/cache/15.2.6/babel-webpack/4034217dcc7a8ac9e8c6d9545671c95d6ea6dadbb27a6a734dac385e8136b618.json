{"ast":null,"code":"import { BaseChartDirective } from 'ng2-charts';\nimport DataLabelsPlugin from 'chartjs-plugin-datalabels';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Graficos/domain/graficos.repository\";\nimport * as i2 from \"ng2-charts\";\nexport let DashboardProductoComponent = /*#__PURE__*/(() => {\n  class DashboardProductoComponent {\n    constructor(graficoService) {\n      this.graficoService = graficoService;\n      this.listaAlmacen = {};\n      this.almacenResponse = {};\n      this.barChartOptions = {\n        responsive: true,\n        // We use these empty structures as placeholders for dynamic theming.\n        scales: {\n          x: {},\n          y: {\n            min: 10\n          }\n        },\n        plugins: {\n          legend: {\n            display: true //Esto muestra las leyendas\n          },\n\n          datalabels: {\n            anchor: 'end',\n            align: 'end'\n          }\n        }\n      };\n      this.barChartType = 'pie';\n      this.barChartPlugins = [DataLabelsPlugin];\n      this.barChartData = {\n        labels: ['Entradada', 'Salida'],\n        datasets: [{\n          data: [65, 59, 80, 81, 56, 55, 40],\n          label: 'Manzana'\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Naranja'\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Naranja'\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Naranja'\n        }, {\n          data: [78, 18, 30, 19, 66, 77, 40],\n          label: 'Naranja'\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Naranja'\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Naranja'\n        }]\n      };\n    }\n    listar() {\n      const fd = new FormData();\n      const requestGrafico = {}; //  this.group.value;\n      requestGrafico.CodigoProducto = '2';\n      requestGrafico.CodigoAlmacen = '1';\n      requestGrafico.CodigoProductoLote = \"\";\n      requestGrafico.CodigoLote = \"0\";\n      requestGrafico.Descripcion = \"\";\n      requestGrafico.Estado = \"\";\n      requestGrafico.CodigoEmpresa = \"00000001\";\n      this.graficoService.listar(requestGrafico).subscribe(response => {\n        this.almacenResponse = response;\n      });\n    }\n    // events\n    chartClicked({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n    chartHovered({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n  }\n  DashboardProductoComponent.ɵfac = function DashboardProductoComponent_Factory(t) {\n    return new (t || DashboardProductoComponent)(i0.ɵɵdirectiveInject(i1.GraficoRepository));\n  };\n  DashboardProductoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardProductoComponent,\n    selectors: [[\"app-dashboard-producto\"]],\n    viewQuery: function DashboardProductoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseChartDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 4,\n    consts: [[\"baseChart\", \"\", 1, \"chart\", 3, \"data\", \"options\", \"plugins\", \"type\", \"chartHover\", \"chartClick\"]],\n    template: function DashboardProductoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"canvas\", 0);\n        i0.ɵɵlistener(\"chartHover\", function DashboardProductoComponent_Template_canvas_chartHover_0_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function DashboardProductoComponent_Template_canvas_chartClick_0_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.barChartOptions)(\"plugins\", ctx.barChartPlugins)(\"type\", ctx.barChartType);\n      }\n    },\n    dependencies: [i2.BaseChartDirective]\n  });\n  return DashboardProductoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}