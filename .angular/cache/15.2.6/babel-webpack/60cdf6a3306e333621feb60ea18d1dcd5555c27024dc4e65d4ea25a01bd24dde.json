{"ast":null,"code":"import { VERSION } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogoConfirmacionComponent } from 'src/app/shared/components/dialogoconfirmacion/dialogoconfirmacion.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/util.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"src/app/aperturaparte/domain/parte.repository\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/toolbar\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"@angular/forms\";\nimport * as i15 from \"@angular/material/table\";\nimport * as i16 from \"../../../../shared/components/table/table.component\";\nimport * as i17 from \"@angular/material/tooltip\";\nimport * as i18 from \"../../../../shared/directives/error-control.directive\";\nconst _c0 = [\"scanner\"];\nconst _c1 = [\"empleado\"];\nfunction FormAperturaparteComponent_mat_card_content_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card-content\")(1, \"form\", 13)(2, \"div\", 14)(3, \"div\", 15)(4, \"div\", 16)(5, \"mat-form-field\", 17)(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Empleado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 18, 19);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(10, \"div\", 20)(11, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function FormAperturaparteComponent_mat_card_content_16_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.aceptar());\n    });\n    i0.ɵɵtext(12, \"Aceptar \");\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14, \"description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function FormAperturaparteComponent_mat_card_content_16_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.Salir(\"\"));\n    });\n    i0.ɵɵtext(16, \"Salir \");\n    i0.ɵɵelementStart(17, \"mat-icon\");\n    i0.ɵɵtext(18, \"launch\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.group);\n  }\n}\nfunction FormAperturaparteComponent_th_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 23);\n  }\n}\nfunction FormAperturaparteComponent_td_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 24)(1, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function FormAperturaparteComponent_td_22_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const row_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.delete(row_r7));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport let FormAperturaparteComponent = /*#__PURE__*/(() => {\n  class FormAperturaparteComponent {\n    constructor(reference, data,\n    //private barcodeScanner: BarcodeScanner,\n    router, dialogo, util, notifier, aperturaService) {\n      this.reference = reference;\n      this.data = data;\n      this.router = router;\n      this.dialogo = dialogo;\n      this.util = util;\n      this.notifier = notifier;\n      this.aperturaService = aperturaService;\n      this.qrData = null;\n      this.scannedCode = null;\n      this.ngVersion = VERSION.full;\n      this.hasCameras = false;\n      this.statusButton = \"false\";\n      this.listaApertura = [];\n      this.listKeyPadButtons = [{\n        icon: 'description',\n        color: 'warn',\n        action: 'nuevo',\n        tooltip: 'Crear Nuevo Registro',\n        texto: \"Nuevo\",\n        estado: \"false\"\n      }, {\n        icon: 'add',\n        color: 'warn',\n        action: 'insert',\n        tooltip: 'Agregar Datos',\n        texto: \"Agregar\",\n        estado: \"group.invalid\"\n      }, {\n        icon: 'sensor_door',\n        color: 'warn',\n        action: 'salir',\n        tooltip: 'Salir De la Pantalla',\n        texto: \"Salir\",\n        estado: \"false\"\n      }];\n      this.metadataTable = [{\n        field: \"codigoEmpleado\",\n        title: \"CodigoEmpleado\"\n      }, {\n        field: \"NombreEmpleado\",\n        title: \"Nombre Completo\"\n      }];\n      this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n      this.dataSource = ELEMENT_DATA;\n    }\n    /*validarcodigoempleado(dato : string):boolean{\r\n       \r\n      var myArr = [\"5\",\"6\",\"12\",\"13\",\"17\",\"23\",\"24\",\"29\",\"31\",\"32\",\"33\",\"35\",\"49\",\"54\",\"55\",\"64\"\r\n      ,\"67\",\"68\",\"76\",\"82\",\"86\",\"89\",\"91\",\"176\",\"257\",\"299\",\"303\",\"305\",\"384\",\"5174\",\"5192\"]\r\n      const resultado =  myArr.includes( dato )\r\n      return resultado\r\n    }\r\n    */\n    /*\r\n    cambiarfocusautomatico(){\r\n      \r\n      const pasarsize =  this.validarcodigoempleado(this.group.controls['codigoEmpleado'].value)\r\n      if  ((this.group.controls['codigoEmpleado'].value.length>4) || (pasarsize===true)){\r\n      \r\n       // this.listarEmpleado(\"\")\r\n        \r\n    }\r\n    \r\n    }\r\n    */\n    ngAfterViewChecked() {\n      //if (this.setFocus && this.cantidad && this.cantidad.nativeElement) {\n      // this.nativeElement.focus(); // can do this because I check if there is a nativeElement above\n      // this.setFocus = false;\n      this.empleado.nativeElement.focus();\n      // }\n    }\n\n    handleKeyDown(event) {\n      if (event.keyCode == 13) {\n        if (parseInt(this.group.controls['codigoEmpleado'].value) === this.data) {\n          this.util.showMessage(\"Empleado ya esta registrado como principal\");\n        } else if (this.arrayempleado.includes(parseInt(this.group.controls['codigoEmpleado'].value)) === false) {\n          //this.listarEmpleado(\"\")\n        } else {\n          this.util.showMessage(\"Empleado ya esta agregado\");\n        }\n      } else if (event.keyCode == 40) {\n        // action\n      } else if (event.keyCode == 38) {\n        // action\n      }\n    }\n    ngOnChanges(changes) {\n      console.log(changes);\n    }\n    ngOnInit() {\n      this.initializeForm();\n      this.path = \"/gestionpartes\";\n      this.cantidadApoyo = 0;\n      this.codigoEmpleado = 0;\n      this.listaEmpleado = [];\n      this.arrayempleado = [];\n      setTimeout(() => {\n        this.empleado.nativeElement.focus();\n      }, 0);\n      // alert(this.apertura.GetEmpleado())\n      this.listaEmpleado = this.data;\n      this.dataTable = this.listaEmpleado;\n      let index;\n      index = 0;\n      for (let clave of this.listaEmpleado) {\n        this.arrayempleado.push(this.listaEmpleado[index].codigoEmpleado);\n        index++;\n      }\n    }\n    execute(action) {\n      if (action == \"insert\") {\n        console.log(action);\n        this.insert();\n      } else {\n        console.log(action);\n        this.exportar();\n      }\n    }\n    Salir(path) {\n      const datacantapoyo = {\n        CantidadApoyo: this.listaEmpleado ? this.listaEmpleado.length : 0,\n        listaEmpleado: this.listaEmpleado ? this.listaEmpleado : []\n      };\n      this.reference.close(datacantapoyo);\n      this.listaEmpleado = [];\n      this.arrayempleado = [];\n    }\n    aceptar() {\n      const datacantapoyo = {\n        CantidadApoyo: this.listaEmpleado ? this.listaEmpleado.length : 0,\n        listaEmpleado: this.listaEmpleado\n      };\n      this.reference.close(datacantapoyo);\n      this.listaEmpleado = [];\n      this.arrayempleado = [];\n    }\n    listarEstacion(codigoEstacion) {\n      /*const RequestEstacion: AperturaParteEstacion = <AperturaParteEstacion>{}; ;\r\n      const values = this.group.value\r\n      \n      RequestEstacion.CodigoEstacion=  values[\"codigoEstacion\"];\r\n      if (this.group.controls['codigoEstacion'].valid){\r\n          this.aperturaService.listarestacion(RequestEstacion).subscribe\r\n          ((response) =>{\r\n                \r\n              this.listEstacionResponse = response\r\n              this.codigoEstacion= this.listEstacionResponse.datos.result[0].codigoEstacion;\r\n              this.group.controls['codigoEstacion'].setValue(this.listEstacionResponse.datos.result[0].codigoEstacion && ' - ' && this.listEstacionResponse.datos.result[0].descripcion );\r\n              if (this.listEstacionResponse.datos.status!=200){\r\n                this.util.showMessage(this.listEstacionResponse.meta.mensaje)\r\n                }\r\n            \r\n              }, (errorServicio)=>{\r\n                this.util.showMessage( errorServicio.error.meta.mensaje);\r\n                this.group.controls['codigoEstacion'].setValue(\"\");\r\n              \r\n        });\r\n      \n      \n      }\r\n      */\n    }\n    //parteresponse : ParteResponse;\n    listar(codigoparte) {\n      /* if (this.group.valid){\r\n       \r\n        const fd= new FormData();\r\n        const values = this.group.value\r\n        const parte: RequestParte =  this.group.value;\r\n        parte.CodigoParte = codigoparte;\r\n        this.aperturaService.listar(parte).subscribe(response =>\r\n        {\r\n          this.listParterespuesta = response\r\n          this.dataTable = this.listParterespuesta.datos.result;\r\n        })\r\n      \n       }*/\n    }\n    insert() {\n      /* if (this.group.valid){\r\n        \r\n          const fd= new FormData();\r\n          const values = this.group.value\r\n       \r\n          fd.append(\"codigoCompania\",'02100000');\r\n          fd.append(\"codigoEmpleado\",this.codigoEmpleado.toString());\r\n          fd.append(\"codigoEstacion\",this.codigoEstacion);\r\n          fd.append (\"codigoOrdenTrabajo\" , values[\"codigoOrdenTrabajo\"]);\r\n          fd.append(\"cantidadApoyo\",this.cantidadApoyo.toString());\r\n          fd.append(\"fechaHoraInicioOt\",this.miDatePipe.transform(new Date(), \"yyyy-MM-ddThh:mm:ss\"));//\"2021-06-14T10:31:14.507\");\r\n          fd.append(\"fechaHoraInicioActividad\",this.miDatePipe.transform(new Date(), \"yyyy-MM-ddThh:mm:ss\"));\r\n          fd.append(\"fechaHoraTerminoActividad\",null);\r\n          fd.append(\"fechaHoraTerminoOt\",null);\r\n          \r\n                 const parte: ParteEntity = this.group.value;\r\n         \r\n          parte.codigoCompañia = fd.get(\"codigoCompania\").toString() ;\r\n          parte.codigoEmpleado = parseInt(fd.get(\"codigoEmpleado\").toString()) ;\r\n          parte.codigoEstacion= fd.get(\"codigoEstacion\").toString() ;\r\n          parte.codigoOrdenTrabajo = parseInt(fd.get(\"codigoOrdenTrabajo\").toString()) ;\r\n          parte.cantidadApoyo= parseInt(fd.get(\"cantidadApoyo\").toString()) ;\r\n          parte.fechaHoraInicioOt= fd.get(\"fechaHoraInicioOt\").toString() ;\r\n          parte.fechaHoraInicioActividad = fd.get(\"fechaHoraInicioActividad\").toString() ;;\r\n          parte.fechaHoraTerminoOt = null ;\r\n          parte.fechaHoraTerminoActividad= null;\r\n         \r\n       this.aperturaService.insert(parte).subscribe((response) =>{\r\n       this.listInsertParterespuesta = response\r\n       this.util.showMessage(this.listInsertParterespuesta.meta.mensaje);\r\n       this.listar(this.listInsertParterespuesta.datos.result.codigoParte)\r\n              });\r\n               }\r\n          */\n    }\n    delete(row) {\n      //const response: Observable<any> = this.util.confirm(\"Estas seguro de Eliminar\");\n      this.dialogo.open(DialogoConfirmacionComponent, {\n        data: `¿Desea Eliminar Empleado?`\n      }).afterClosed().subscribe(confirmado => {\n        if (confirmado) {\n          this.removeItem(row);\n          this.dataTable = this.listaEmpleado;\n          this.removeItemFromArr(this.arrayempleado, row.codigoEmpleado);\n        } else {\n          // alert(\"Deberías probarlo, a mí me gusta :)\");\n        }\n      });\n      //response.subscribe((response)=> console.log(\"response\",response));\n      //this.removeItemFromArr( this.listaEmpleado, row.codigoEmpleado );\n    }\n\n    removeItemFromArr(arr, item) {\n      var i = arr.indexOf(item);\n      if (i !== -1) {\n        arr.splice(i, 1);\n      }\n    }\n    removeItem(obj) {\n      this.listaEmpleado = this.listaEmpleado.filter(item => item !== obj);\n    }\n    edit() {\n      this.openModal({\n        name: 'Marcela'\n      });\n    }\n    nuevo() {\n      this.initializeForm();\n      this.listaApertura = [];\n      this.dataTable = this.listaApertura;\n      this.listaEmpleado = [];\n    }\n    cargarDatos() {\n      this.group = new FormGroup({\n        codigoEmpleado: new FormControl(this.listaApertura[0].codigoEmpleado, Validators.required)\n      });\n    }\n    exportar() {\n      this.OpenSheet();\n    }\n    OpenSheet() {\n      this.util.openSheet();\n    }\n    initializeForm() {\n      this.group = new FormGroup({\n        codigoEmpleado: new FormControl(null, Validators.required),\n        // Validators.maxLength(10),\n        //Validators.pattern(/^[1-9]\\d{1,10}$/)]),\n        codigoEstacion: new FormControl(null, Validators.required),\n        codigoOrdenTrabajo: new FormControl(null, Validators.required)\n      });\n    }\n    openModal(record = null) {\n      const options = {\n        disableClose: true,\n        panelClass: 'container-form',\n        data: record\n      };\n      const reference = this.util.openModal(FormAperturaparteComponent, options);\n      reference.subscribe(response => {\n        if (response) {\n          this.util.showMessage(\"Datos guardados\");\n        }\n      });\n    }\n    /*scanCode () {\r\n     \r\n          //alert(\"camara\");\r\n      this.scanner.camerasFound.subscribe((devices: MediaDeviceInfo[]) => {\r\n        // selects the devices's back camera by default\r\n        alert(devices);\r\n        for (const device of devices) {\r\n            if (device.deviceId === \"03b7ab59427c8f29a5b9aba24b66417872c77ec38481f9ce20ab8eff655a80be\") {\r\n              this.hasCameras = true;\r\n              console.log('Devices: ', devices);\r\n              this.availableDevices = devices;\r\n              return device;\r\n            }\r\n            console.log('Devices: ', devices);\r\n        }\r\n        console.log('Devices: ', devices);\r\n      });\r\n        \r\n        this.scanner.camerasFound.subscribe((devices: MediaDeviceInfo[]) => {\r\n        this.hasCameras = true;\r\n            console.log('Devices: ', devices);\r\n        this.availableDevices = devices;\r\n        });\r\n    \r\n        this.scanner.camerasNotFound.subscribe((devices: MediaDeviceInfo[]) => {\r\n        console.error('An error has occurred when trying to enumerate your video-stream-enabled devices.');\r\n    });\r\n        this.scanner.permissionResponse.subscribe((answer: boolean) => {\r\n      this.hasPermission = answer;\r\n    });\r\n        }\r\n    */\n    handleQrCodeResult(resultString) {\n      console.log('Result: ', resultString);\n      this.qrResultString = resultString;\n    }\n    onDeviceSelectChange(selectedValue) {\n      console.log('Selection changed: ', selectedValue);\n      // this.selectedDevice = this.scanner.getDeviceById(selectedValue);\n    }\n  }\n\n  FormAperturaparteComponent.ɵfac = function FormAperturaparteComponent_Factory(t) {\n    return new (t || FormAperturaparteComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i3.UtilService), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.AperturaparteRepository));\n  };\n  FormAperturaparteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormAperturaparteComponent,\n    selectors: [[\"app-form-aperturaparte\"]],\n    viewQuery: function FormAperturaparteComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hasCameras = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.empleado = _t.first);\n      }\n    },\n    inputs: {\n      codigoEmpleadoPadre: \"codigoEmpleadoPadre\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 23,\n    vars: 3,\n    consts: [[\"color\", \"primary\", \"fxLayout\", \"\", \"fxLayoutAlign\", \"space-between left\", 2, \"height\", \"33px\"], [1, \"title\"], [\"fxLayout\", \"\", \"fxLayoutAlign\", \"end center\"], [\"mat-button\", \"\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayout.xs\", \"column\", \"fxLayoutGap\", \"0px\", \"fxLayoutAlign\", \"center stretch\", 2, \"margin-top\", \"1px\"], [\"fxFlex\", \"100\", 2, \"padding\", \"0px\"], [4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxLayout.xs\", \"column\", \"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"50\", 2, \"background-color\", \"rgb(219, 217, 217)\", \"padding\", \"24px\"], [3, \"dataTable\", \"metadataTable\"], [\"matColumnDef\", \"actions\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [3, \"formGroup\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"2px\", \"fxLayoutAlign\", \"center \"], [\"fxFlex\", \"100\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"center \", 2, \"padding\", \"24px\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"required\", \"\", \"formControlName\", \"codigoEmpleado\"], [\"empleado\", \"\"], [\"fxLayoutAlign\", \"center center\", \"fxLayoutGap\", \"20px\", 2, \"background-color\", \"rgb(219, 217, 217)\", \"padding\", \"10px\", \"margin\", \"0\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"matTooltip\", \"Crear un nuevo registro\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\", \"matTooltip\", \"Cerrar de la pantalla actual\", \"type\", \"button\", 3, \"click\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]],\n    template: function FormAperturaparteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Agregar Personal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function FormAperturaparteComponent_Template_button_click_4_listener() {\n          return ctx.collapsed = true;\n        });\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"expand_less\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function FormAperturaparteComponent_Template_button_click_7_listener() {\n          return ctx.collapsed = false;\n        });\n        i0.ɵɵelementStart(8, \"mat-icon\");\n        i0.ɵɵtext(9, \"expand_more\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function FormAperturaparteComponent_Template_button_click_10_listener() {\n          return ctx.Salir(\"\");\n        });\n        i0.ɵɵelementStart(11, \"mat-icon\");\n        i0.ɵɵtext(12, \"close\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"div\", 5)(15, \"mat-card\");\n        i0.ɵɵtemplate(16, FormAperturaparteComponent_mat_card_content_16_Template, 19, 1, \"mat-card-content\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 7)(18, \"div\", 8)(19, \"app-table\", 9);\n        i0.ɵɵelementContainerStart(20, 10);\n        i0.ɵɵtemplate(21, FormAperturaparteComponent_th_21_Template, 1, 0, \"th\", 11);\n        i0.ɵɵtemplate(22, FormAperturaparteComponent_td_22_Template, 4, 0, \"td\", 12);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", !ctx.collapsed);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataTable\", ctx.dataTable)(\"metadataTable\", ctx.metadataTable);\n      }\n    },\n    dependencies: [i6.NgIf, i7.DefaultLayoutDirective, i7.DefaultLayoutGapDirective, i7.DefaultLayoutAlignDirective, i7.DefaultFlexDirective, i8.MatToolbar, i9.MatCard, i9.MatCardContent, i10.MatFormField, i10.MatLabel, i11.MatInput, i12.MatButton, i13.MatIcon, i14.ɵNgNoValidate, i14.DefaultValueAccessor, i14.NgControlStatus, i14.NgControlStatusGroup, i14.RequiredValidator, i14.FormGroupDirective, i14.FormControlName, i15.MatHeaderCellDef, i15.MatColumnDef, i15.MatCellDef, i15.MatHeaderCell, i15.MatCell, i16.TableComponent, i17.MatTooltip, i1.MatDialogClose, i18.ErrorControlDirective],\n    styles: [\".container-form{width:600px}.container-form mat-dialog-container{padding:0}.container-form mat-dialog-content{margin:0;padding:24px}.example-full-width{width:100%}@media (max-width: 500px){.container-form{width:320px}}\\n\"],\n    encapsulation: 2\n  });\n  return FormAperturaparteComponent;\n})();\nconst ELEMENT_DATA = [{\n  position: 1,\n  name: 'Hydrogen',\n  weight: 1.0079,\n  symbol: 'H'\n}, {\n  position: 2,\n  name: 'Helium',\n  weight: 4.0026,\n  symbol: 'He'\n}, {\n  position: 3,\n  name: 'Lithium',\n  weight: 6.941,\n  symbol: 'Li'\n}, {\n  position: 4,\n  name: 'Beryllium',\n  weight: 9.0122,\n  symbol: 'Be'\n}, {\n  position: 5,\n  name: 'Boron',\n  weight: 10.811,\n  symbol: 'B'\n}, {\n  position: 6,\n  name: 'Carbon',\n  weight: 12.0107,\n  symbol: 'C'\n}, {\n  position: 7,\n  name: 'Nitrogen',\n  weight: 14.0067,\n  symbol: 'N'\n}, {\n  position: 8,\n  name: 'Oxygen',\n  weight: 15.9994,\n  symbol: 'O'\n}, {\n  position: 9,\n  name: 'Fluorine',\n  weight: 18.9984,\n  symbol: 'F'\n}, {\n  position: 10,\n  name: 'Neon',\n  weight: 20.1797,\n  symbol: 'Ne'\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}