{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as XLSX from 'xlsx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../domain/ingresorproducto.repository\";\nimport * as i2 from \"src/app/Almacen/domain/almacen.repository\";\nimport * as i3 from \"src/app/tienda/domain/tienda.repository\";\nimport * as i4 from \"src/app/producto/domain/producto.repository\";\nimport * as i5 from \"src/app/Lotes/domain/lote.repository\";\nimport * as i6 from \"src/app/services/util.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"src/app/services/storage.service\";\nimport * as i9 from \"@angular/flex-layout/flex\";\nimport * as i10 from \"@angular/material/toolbar\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/material/button\";\nimport * as i15 from \"@angular/material/icon\";\nimport * as i16 from \"@angular/forms\";\nimport * as i17 from \"@angular/material/table\";\nimport * as i18 from \"../../../shared/components/table/table.component\";\nimport * as i19 from \"@angular/material/tooltip\";\nimport * as i20 from \"../../../shared/directives/error-control.directive\";\nimport * as i21 from \"@angular/material/select\";\nimport * as i22 from \"@angular/material/core\";\nfunction IngresoproductoComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", row_r13.codigoLote);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r13.descripcion, \" \");\n  }\n}\nfunction IngresoproductoComponent_mat_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", row_r14.codigoAlmacen);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r14.descripcion, \" \");\n  }\n}\nfunction IngresoproductoComponent_th_101_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 41);\n  }\n}\nfunction IngresoproductoComponent_td_102_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function IngresoproductoComponent_td_102_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const row_r15 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.editItem(row_r15));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"edit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction IngresoproductoComponent_td_102_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function IngresoproductoComponent_td_102_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const row_r15 = i0.ɵɵnextContext().$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.saveItem(row_r15));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"save\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction IngresoproductoComponent_td_102_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function IngresoproductoComponent_td_102_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const row_r15 = i0.ɵɵnextContext().$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.cancelEditItem(row_r15));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction IngresoproductoComponent_td_102_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 42);\n    i0.ɵɵtemplate(1, IngresoproductoComponent_td_102_button_1_Template, 3, 0, \"button\", 43);\n    i0.ɵɵtemplate(2, IngresoproductoComponent_td_102_button_2_Template, 3, 0, \"button\", 43);\n    i0.ɵɵtemplate(3, IngresoproductoComponent_td_102_button_3_Template, 3, 0, \"button\", 43);\n    i0.ɵɵelementStart(4, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function IngresoproductoComponent_td_102_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const row_r15 = restoredCtx.$implicit;\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.EliminarItem(row_r15));\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const row_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r15.IsEditing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r15.IsEditing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r15.IsEditing);\n  }\n}\nexport let IngresoproductoComponent = /*#__PURE__*/(() => {\n  class IngresoproductoComponent {\n    constructor(IngresoProductoService, AlmacenService, TiendaService, ProductoService, LoteService, util, miDatePipe, storage) {\n      this.IngresoProductoService = IngresoProductoService;\n      this.AlmacenService = AlmacenService;\n      this.TiendaService = TiendaService;\n      this.ProductoService = ProductoService;\n      this.LoteService = LoteService;\n      this.util = util;\n      this.miDatePipe = miDatePipe;\n      this.storage = storage;\n      this.ListaTmpTransaccionItem = [];\n      this.data = [];\n      this.metadataTable = [{\n        field: \"CodigoProducto\",\n        title: \"Cod. Producto\",\n        editable: false,\n        type: \"text\"\n      }, {\n        field: \"Descripcion\",\n        title: \"Descripcion\",\n        editable: false,\n        type: \"text\"\n      }, {\n        field: \"cantidad\",\n        title: \"Cantidad\",\n        editable: true,\n        type: \"number\"\n      },\n      // {field:\"Lote\", title: \"Lote\"},\n      {\n        field: \"PrecioUnitario\",\n        title: \"Precio Unitario\",\n        editable: true,\n        type: \"number\"\n      }];\n    }\n    ngOnInit() {\n      this.initializeForm();\n      this.ListarAlmacen(\"\");\n      //this.ListarTienda(\"\")\n      this.ListarLote(\"\");\n      this.ObtenerCorrelativo(\"NI\");\n      //this.ListaTmpTransaccionItem = []\n    }\n\n    ListarTransaccion(param_CodigoTransaccion) {\n      if (this.group.valid) {\n        const fd = new FormData();\n        const values = this.group.value;\n        const ingresoproductorequest = {};\n        ingresoproductorequest.Codigotransaccion = param_CodigoTransaccion;\n        this.IngresoProductoService.listartransaccion(ingresoproductorequest).subscribe(response => {\n          this.ResponseIngresoProducto = response;\n          //this.dataTable = this.ResponseIngresoProducto.datos.result;\n        });\n      }\n    }\n\n    ListarProducto(param_Empresa, param_CodigoProducto) {\n      const ProductoRequest = {};\n      const values = this.group.value;\n      if (values[\"codigoproducto\"] != null && values[\"codigoproducto\"] != \"\") {\n        ProductoRequest.CodigoProducto = param_CodigoProducto;\n        ProductoRequest.CodigoEmpresa = param_Empresa;\n        ProductoRequest.Descripcion = \"%\";\n        ProductoRequest.Color = \"%\";\n        ProductoRequest.Talla = \"%\";\n        ProductoRequest.Tipo_Prenda = 0;\n        ProductoRequest.Genero = \"%\";\n        ProductoRequest.Estado = \"A\";\n        this.ProductoService.listar(ProductoRequest).subscribe(response => {\n          this.ResponseProducto = response;\n          if (this.ResponseProducto.datos.status != 200) {\n            this.util.showMessage(this.ResponseProducto.meta.mensaje);\n          } else {\n            this.group.controls['descripcion'].setValue(response.datos.result[0].descripcion);\n            this.group.controls['stockactual'].setValue(response.datos.result[0].stock);\n            //this.group.controls['lote'].setValue(this.ResponseProducto.datos.result[0])\n            //this.group.controls['costounitario'].setValue(0)\n            //this.group.controls['stockactual'].setValue(0)\n            //lote : new FormControl (null,Validators.required),\n          }\n        }, errorServicio => {\n          this.util.showMessage(errorServicio.error.meta.mensaje);\n          this.group.controls['codigoproducto'].setValue(\"\");\n          this.group.controls['descripcion'].setValue(\"\");\n          this.group.controls['cantidad'].setValue(0);\n          this.group.controls['costounitario'].setValue(0.0);\n          this.group.controls['stockactual'].setValue(0);\n        });\n      } else {\n        this.util.showMessage(\"Ingrese un valor valido\");\n      }\n    }\n    ListarAlmacen(Empresa) {\n      const Almacenequest = {};\n      Almacenequest.Descripcion = '%';\n      Almacenequest.Estado = 'A';\n      this.AlmacenService.listar(Almacenequest).subscribe(response => {\n        this.ResponseAlmacen = response;\n        this.Almacen = this.ResponseAlmacen.datos.result;\n      });\n    }\n    ListarTienda(Empresa) {\n      const TiendaRequest = {};\n      TiendaRequest.Descripcion = '%';\n      TiendaRequest.Estado = 'A';\n      this.TiendaService.listar(TiendaRequest).subscribe(Response => {\n        this.ResponseTienda = Response;\n        this.Tienda = this.ResponseTienda.datos.result;\n      });\n    }\n    ListarLote(Empresa) {\n      const LoteRequest = {};\n      LoteRequest.Descripcion = '%';\n      LoteRequest.Estado = 'A';\n      this.LoteService.listar(LoteRequest).subscribe(Response => {\n        this.ResponseLote = Response;\n        this.Lote = this.ResponseLote.datos.result;\n      });\n      alert('listalote');\n    }\n    AgregarItem(event) {\n      //ListaProducto: TransaccionDetalle[]\n      if (event.pointerType != \"\") {\n        const values = this.group.value;\n        alert(event.pointerType);\n        this.ListaProductoItem = {};\n        this.ListaProductoItem.CodigoProducto = values[\"codigoproducto\"];\n        this.ListaProductoItem.Descripcion = values[\"descripcion\"];\n        this.ListaProductoItem.cantidad = values[\"cantidad\"];\n        this.ListaProductoItem.PrecioUnitario = values[\"costounitario\"];\n        this.ListaProductoItem.IsEditing = false;\n        if (this.ListaProductoItem.Descripcion != null && this.ListaProductoItem.Descripcion != \"\") {\n          if (this.ListaProductoItem.cantidad != 0 && this.ListaProductoItem.PrecioUnitario != 0) {\n            const index = this.ListaTmpTransaccionItem.findIndex(i => i.CodigoProducto === this.ListaProductoItem.CodigoProducto);\n            if (index === -1) {\n              this.dataTable = this.ListaTmpTransaccionItemGeneral;\n              this.ListaTmpTransaccionItem.push(this.ListaProductoItem);\n              // alert(this.ListaProductoItem.Descripcion)\n              this.dataTable = Array.from(this.ListaTmpTransaccionItem);\n            }\n          }\n        }\n      }\n    }\n    EliminarItem(row) {\n      const index = this.ListaTmpTransaccionItem.findIndex(x => x.CodigoProducto === row.CodigoProducto);\n      if (index !== -1) {\n        this.ListaTmpTransaccionItem.splice(index, 1);\n        //this.dataTable = this.ListaTmpTransaccionItem\n        this.dataTable = Array.from(this.ListaTmpTransaccionItem);\n      }\n    }\n    editItem(row) {\n      row.IsEditing = true;\n      this.dataTable = Array.from(this.ListaTmpTransaccionItem);\n    }\n    saveItem(row) {\n      row.IsEditing = false;\n      const index = this.ListaTmpTransaccionItem.findIndex(i => i.CodigoProducto === row.codigoproducto);\n      // this.ListaTmpTransaccionItem[index].cantidad = row.cantidad;\n      // this.ListaTmpTransaccionItem[index].cantidad = row.;\n      this.dataTable = Array.from(this.ListaTmpTransaccionItem);\n    }\n    cancelEditItem(row) {\n      row.IsEditing = false;\n      this.dataTable = Array.from(this.ListaTmpTransaccionItem);\n    }\n    onFileSelected(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const bstr = e.target.result;\n          const workbook = XLSX.read(bstr, {\n            type: 'binary'\n          });\n          const worksheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[worksheetName];\n          // Aquí puedes procesar los datos de la hoja de cálculo\n          this.data = XLSX.utils.sheet_to_json(worksheet, {\n            header: 1\n          });\n        };\n        reader.readAsBinaryString(file);\n      }\n    }\n    importFile() {\n      this.data.forEach(element => {\n        if (element.length > 0) {\n          this.ListaProductoItem = {};\n          this.ListaProductoItem.CodigoProducto = element[0];\n          this.ListaProductoItem.Descripcion = element[1];\n          this.ListaProductoItem.cantidad = element[2];\n          this.ListaProductoItem.PrecioUnitario = element[3];\n          this.ListaProductoItem.IsEditing = false;\n          this.ListaTmpTransaccionItem.push(this.ListaProductoItem);\n        }\n      });\n      this.dataTable = Array.from(this.ListaTmpTransaccionItem);\n    }\n    grabarIngreso() {\n      if (this.ListaTmpTransaccionItem.length > 0) {\n        this.VIngresoProductoRequest = {};\n        const valuesInsert = this.group.value;\n        this.VIngresoProductoRequest.TransaccionDetalle = [];\n        this.VIngresoProductoRequest.Codigotransaccion = 0;\n        this.VIngresoProductoRequest.CodigoTipoTransaccion = 'IPP';\n        this.VIngresoProductoRequest.CodigoTienda = 0;\n        this.VIngresoProductoRequest.CodigoAlmacen = valuesInsert[\"almacen\"];\n        this.VIngresoProductoRequest.TipoDocumento = 'NI';\n        this.VIngresoProductoRequest.NroDocumento = this.CorrelativoDocumento;\n        this.VIngresoProductoRequest.FechaDocumento = this.miDatePipe.transform(new Date(), \"yyyy-MM-ddTHH:mm:ss\");\n        this.VIngresoProductoRequest.Periodo = parseInt(this.miDatePipe.transform(new Date(), \"yyyyMMdd\"));\n        this.VIngresoProductoRequest.Montototal = 0;\n        this.VIngresoProductoRequest.Observacion = valuesInsert[\"observacion\"] == null ? \"\" : valuesInsert[\"observacion\"];\n        this.VIngresoProductoRequest.Estado = 'PR';\n        this.VIngresoProductoRequest.Usuario = this.storage.get(\"codusuario\");\n        this.VIngresoProductoRequest.Tipo = 'I';\n        this.VIngresoProductoRequest.CodigoEmpresa = this.storage.get(\"codcompania\");\n        this.ListaTmpTransaccionItem.forEach(item => {\n          this.ListItemTransaccion = {};\n          this.ListItemTransaccion.CodigoTransaccion = \"0\";\n          this.ListItemTransaccion.CodigoProducto = item.CodigoProducto;\n          this.ListItemTransaccion.Cantidad = item.cantidad;\n          this.ListItemTransaccion.PrecioUnitario = item.PrecioUnitario;\n          this.ListItemTransaccion.TipoDocumento = 'NI';\n          this.ListItemTransaccion.NroDocumento = this.CorrelativoDocumento;\n          this.ListItemTransaccion.Lote = valuesInsert[\"lote\"], this.ListItemTransaccion.MontoTotal = item.cantidad * item.PrecioUnitario, this.ListItemTransaccion.CodigoEmpresa = this.storage.get(\"codcompania\");\n          this.ListItemTransaccion.Observaciones = valuesInsert[\"ObservacionDetalle\"] == null ? \"\" : valuesInsert[\"ObservacionDetalle\"], this.ListItemTransaccion.Estado = 'PR', this.ListItemTransaccion.Accion = 'I';\n          this.VIngresoProductoRequest.TransaccionDetalle.push(this.ListItemTransaccion);\n        });\n        this.IngresoProductoService.GuardarTransaccion(this.VIngresoProductoRequest).subscribe(response => {\n          this.ResponseTransaccion = response;\n          if (this.ResponseTransaccion.datos.status != 200) {\n            this.util.showMessage(this.ResponseTransaccion.meta.mensaje);\n          } else {\n            this.util.showMessage(this.ResponseTransaccion.meta.mensaje + \"Registro Exitoso\" + \" Documento Nro:\" + this.CorrelativoDocumento);\n            this.Nuevo();\n          }\n        }, errorServicio => {\n          var ErrorMensaje = '';\n          this.util.showMessage(\"Error al guardar la transacción. Por favor, inténtelo de nuevo más tarde.\");\n        });\n      } else {\n        this.util.showMessage(\"Agrege un producto por favor\");\n      }\n    }\n    ObtenerCorrelativo(TipoDocumento) {\n      this.VParametroRequest = {};\n      this.VParametroRequest.CodigoParametros = TipoDocumento;\n      this.VParametroRequest.CodigoSistema = \"VET\";\n      this.IngresoProductoService.ListarCorrelativo(this.VParametroRequest).subscribe(response => {\n        this.ResponseParametro = response;\n        if (this.ResponseParametro.datos.status != 200) {\n          this.util.showMessage(this.ResponseParametro.meta.mensaje);\n        } else {\n          this.CorrelativoDocumento = response.datos.result[0].descripcion.toString().trim();\n          this.CorrelativoDocumento = this.CorrelativoDocumento.toString().padStart(8, '0');\n          //this.group.controls['lote'].setValue(this.ResponseProducto.datos.result[0])\n          //this.group.controls['costounitario'].setValue(0)\n          //this.group.controls['stockactual'].setValue(0)\n          //lote : new FormControl (null,Validators.required),\n        }\n      }, errorServicio => {\n        this.util.showMessage(errorServicio.error.meta.mensaje);\n        this.CorrelativoDocumento = \"0\";\n      });\n      return this.CorrelativoDocumento;\n    }\n    Nuevo() {\n      this.initializeForm();\n      this.ListaTmpTransaccionItem = [];\n      this.dataTable = Array.from(this.ListaTmpTransaccionItem);\n      this.ObtenerCorrelativo(\"NI\");\n    }\n    ///Metodos utilitarios\n    initializeForm() {\n      this.group = new FormGroup({\n        codigoproducto: new FormControl(null, null),\n        descripcion: new FormControl(null, null),\n        lote: new FormControl(null, Validators.required),\n        observacion: new FormControl(null, null),\n        cantidad: new FormControl(0, null),\n        costounitario: new FormControl(0.0, null),\n        stockactual: new FormControl(0, null),\n        almacen: new FormControl(null, Validators.required),\n        tienda: new FormControl(null, null),\n        ObservacionDetalle: new FormControl(null, null)\n      });\n    }\n    handleKeyDown(event, tipo) {\n      if (event.keyCode == 13) {\n        198;\n        if (tipo === \"Producto\") {\n          const values = this.group.value;\n          this.ListarProducto(\"00000001\", values[\"codigoproducto\"]);\n          alert('producto');\n        }\n      } else if (event.keyCode == 40) {\n        // action\n      } else if (event.keyCode == 38) {\n        // action\n      }\n    }\n    limpiartexto(control) {}\n  }\n  IngresoproductoComponent.ɵfac = function IngresoproductoComponent_Factory(t) {\n    return new (t || IngresoproductoComponent)(i0.ɵɵdirectiveInject(i1.IngresoProductoRepository), i0.ɵɵdirectiveInject(i2.AlmacenRepository), i0.ɵɵdirectiveInject(i3.TiendaRepository), i0.ɵɵdirectiveInject(i4.ProductoRepository), i0.ɵɵdirectiveInject(i5.LoteRepository), i0.ɵɵdirectiveInject(i6.UtilService), i0.ɵɵdirectiveInject(i7.DatePipe), i0.ɵɵdirectiveInject(i8.StorageService));\n  };\n  IngresoproductoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IngresoproductoComponent,\n    selectors: [[\"app-ingresoproducto\"]],\n    decls: 103,\n    vars: 6,\n    consts: [[\"color\", \"primary\", \"fxLayout\", \"\", \"fxLayoutAlign\", \"space-between left\", 2, \"height\", \"33px\"], [1, \"title\"], [\"fxLayout\", \"row\", \"fxLayout.xs\", \"column\", \"fxLayoutGap\", \"0px\", \"fxLayoutAlign\", \"center\", 2, \"margin-top\", \"1px\"], [\"fxFlex\", \"100\", 2, \"padding\", \"0px\"], [3, \"formGroup\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"2px\", \"fxLayoutAlign\", \"center\"], [\"fxFlex\", \"100\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"center \", 2, \"padding\", \"24px\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\"], [\"appearance\", \"fill\", 1, \"example-full-width-alterno\"], [\"formControlName\", \"lote\"], [\"tienda\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"almacen\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"observacion\"], [\"searchElement\", \"\"], [\"appearance\", \"outline\", 1, \"example-full-width-alterno\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"codigoproducto\", 3, \"keydown\"], [\"matSuffix\", \"\", 3, \"click\"], [\"readonly\", \"\", \"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"descripcion\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Buscar Producto\", \"type\", \"button\", 2, \"height\", \"48px\"], [\"type\", \"number\", \"matInput\", \"\", \"required\", \"\", \"formControlName\", \"cantidad\"], [\"type\", \"number\", \"matInput\", \"\", \"required\", \"\", \"formControlName\", \"costounitario\"], [\"readonly\", \"\", \"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"stockactual\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"ObservacionDetalle\"], [2, \"padding-top\", \"4px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Agregar Producto\", 2, \"height\", \"70%\", 3, \"click\"], [\"fxLayoutAlign\", \"center center\", \"fxLayoutGap\", \"20px\", \"color\", \"primary\"], [\"type\", \"file\", 3, \"change\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Importar\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Nuevo registro\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Grabar registro\", \"type\", \"button\", 3, \"disabled\", \"click\"], [\"guardar\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Cerrar de la pantalla actual\", \"type\", \"button\"], [\"fxLayout\", \"column\", \"fxLayout.xs\", \"column\", \"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"50\", 2, \"background-color\", \"rgb(219, 217, 217)\", \"padding\", \"1px\"], [3, \"dataTable\", \"metadataTable\"], [\"matColumnDef\", \"actions\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [3, \"value\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function IngresoproductoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Ingreso Producto\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"mat-card\")(6, \"mat-card-content\")(7, \"form\", 4)(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7)(11, \"mat-form-field\", 8)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Lote\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-select\", 9, 10);\n        i0.ɵɵtemplate(16, IngresoproductoComponent_mat_option_16_Template, 2, 2, \"mat-option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-error\");\n        i0.ɵɵtext(18, \"Seleccione un Lote por favor\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 8)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Almacen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-select\", 12);\n        i0.ɵɵtemplate(23, IngresoproductoComponent_mat_option_23_Template, 2, 2, \"mat-option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-error\");\n        i0.ɵɵtext(25, \"Seleccione un Almacen por favor\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 7)(27, \"mat-form-field\", 13)(28, \"mat-label\");\n        i0.ɵɵtext(29, \"Observacion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 14, 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 7)(33, \"mat-form-field\", 16)(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Producto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"input\", 17, 15);\n        i0.ɵɵlistener(\"keydown\", function IngresoproductoComponent_Template_input_keydown_36_listener($event) {\n          return ctx.handleKeyDown($event, \"Producto\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"mat-error\");\n        i0.ɵɵtext(39, \"Ingrese un codigo producto por favor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-icon\", 18);\n        i0.ɵɵlistener(\"click\", function IngresoproductoComponent_Template_mat_icon_click_40_listener() {\n          return ctx.limpiartexto(\"Empleado\");\n        });\n        i0.ɵɵtext(41, \"close\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"mat-form-field\", 13)(43, \"mat-label\");\n        i0.ɵɵtext(44, \"descripcion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"input\", 19, 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"button\", 20)(48, \"mat-icon\");\n        i0.ɵɵtext(49, \"search\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(50, \"div\", 7)(51, \"mat-form-field\", 16)(52, \"mat-label\");\n        i0.ɵɵtext(53, \"Cantidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"input\", 21, 15);\n        i0.ɵɵelementStart(56, \"mat-error\");\n        i0.ɵɵtext(57, \"ingrese la cantidad\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(58, \"mat-form-field\", 16)(59, \"mat-label\");\n        i0.ɵɵtext(60, \"Costo Unitario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(61, \"input\", 22, 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"mat-form-field\", 16)(64, \"mat-label\");\n        i0.ɵɵtext(65, \"Stock Actual\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(66, \"input\", 23, 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(68, \"div\", 7)(69, \"mat-form-field\", 16)(70, \"mat-label\");\n        i0.ɵɵtext(71, \"Observacion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(72, \"input\", 24, 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 25)(75, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function IngresoproductoComponent_Template_button_click_75_listener($event) {\n          return ctx.AgregarItem($event);\n        });\n        i0.ɵɵelementStart(76, \"mat-icon\");\n        i0.ɵɵtext(77, \"add_box\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(78, \"div\", 27)(79, \"input\", 28);\n        i0.ɵɵlistener(\"change\", function IngresoproductoComponent_Template_input_change_79_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"button\", 29);\n        i0.ɵɵlistener(\"click\", function IngresoproductoComponent_Template_button_click_80_listener() {\n          return ctx.importFile();\n        });\n        i0.ɵɵtext(81, \"Importar \");\n        i0.ɵɵelementStart(82, \"mat-icon\");\n        i0.ɵɵtext(83, \"description\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(84, \"button\", 30);\n        i0.ɵɵlistener(\"click\", function IngresoproductoComponent_Template_button_click_84_listener() {\n          return ctx.Nuevo();\n        });\n        i0.ɵɵtext(85, \"Nuevo \");\n        i0.ɵɵelementStart(86, \"mat-icon\");\n        i0.ɵɵtext(87, \"description\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(88, \"button\", 31, 32);\n        i0.ɵɵlistener(\"click\", function IngresoproductoComponent_Template_button_click_88_listener() {\n          return ctx.grabarIngreso();\n        });\n        i0.ɵɵtext(90, \"Grabar \");\n        i0.ɵɵelementStart(91, \"mat-icon\");\n        i0.ɵɵtext(92, \"save\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(93, \"button\", 33);\n        i0.ɵɵtext(94, \"Salir \");\n        i0.ɵɵelementStart(95, \"mat-icon\");\n        i0.ɵɵtext(96, \"exit_to_app\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(97, \"div\", 34)(98, \"div\", 35)(99, \"app-table\", 36);\n        i0.ɵɵelementContainerStart(100, 37);\n        i0.ɵɵtemplate(101, IngresoproductoComponent_th_101_Template, 1, 0, \"th\", 38);\n        i0.ɵɵtemplate(102, IngresoproductoComponent_td_102_Template, 7, 3, \"td\", 39);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.group);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Lote);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Almacen);\n        i0.ɵɵadvance(65);\n        i0.ɵɵproperty(\"disabled\", ctx.group.invalid);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"dataTable\", ctx.dataTable)(\"metadataTable\", ctx.metadataTable);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i9.DefaultLayoutDirective, i9.DefaultLayoutGapDirective, i9.DefaultLayoutAlignDirective, i9.DefaultFlexDirective, i10.MatToolbar, i11.MatCard, i11.MatCardContent, i12.MatFormField, i12.MatLabel, i12.MatError, i12.MatSuffix, i13.MatInput, i14.MatButton, i15.MatIcon, i16.ɵNgNoValidate, i16.DefaultValueAccessor, i16.NumberValueAccessor, i16.NgControlStatus, i16.NgControlStatusGroup, i16.RequiredValidator, i16.FormGroupDirective, i16.FormControlName, i17.MatHeaderCellDef, i17.MatColumnDef, i17.MatCellDef, i17.MatHeaderCell, i17.MatCell, i18.TableComponent, i19.MatTooltip, i20.ErrorControlDirective, i21.MatSelect, i22.MatOption],\n    styles: [\".align-right[_ngcontent-%COMP%]{text-align:right!important}.example-form[_ngcontent-%COMP%]{min-width:150px;max-width:800px;width:100%}.example-full-width[_ngcontent-%COMP%]{width:100%}.example-full-width-alterno[_ngcontent-%COMP%]{width:20%}.example-full-width-alterno2[_ngcontent-%COMP%], .example-full-width-alterno3[_ngcontent-%COMP%]{width:50%}td[_ngcontent-%COMP%]{padding-right:8px}.small-video[_ngcontent-%COMP%]{max-height:70vh;width:100vw;object-fit:contain}.example-table[_ngcontent-%COMP%]{width:100%}.mat-card[_ngcontent-%COMP%]{padding:0 0 10px}.container-form[_ngcontent-%COMP%]   mat-dialog-container[_ngcontent-%COMP%]{padding:0}.mat-cell[_ngcontent-%COMP%]{font-size:14px;min-height:48px;text-align:center;border-right:1px solid black}.mat-toolbar[_ngcontent-%COMP%]   mat-dialog-content[_ngcontent-%COMP%]{margin:0;padding:24px}@media (max-width: 500px){.container-form[_ngcontent-%COMP%]{width:320px}}@media all and (max-width: 600px){div[_ngcontent-%COMP%]{width:100%;height:auto;margin-left:10px}}\"]\n  });\n  return IngresoproductoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}